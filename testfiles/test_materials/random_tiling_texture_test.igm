<?xml version="1.0" encoding="utf-8" ?>
<scenedata>
    <material>
        <name>mat1</name>
        <diffuse>
            
            <albedo>
                <shader>
                  <texture>
                    <path>../../testscenes/ColorChecker_sRGB_from_Ref_CMYK.jpg</path>
                    <a>0</a>
                    <b>1</b>
                    <c>0</c>
                    <uv_set_index>0</uv_set_index>
                    <exponent>2.2</exponent>
                    <tex_coord_generation>
                      <uv>
                        <matrix>1 0 0 1</matrix>
                        <translation>0 0</translation>
                      </uv>
                    </tex_coord_generation>
                    <smooth>false</smooth>
                  </texture>
                  <texture>
                    <path>../checker.jpg</path>
                    <a>0</a>
                    <b>1</b>
                    <c>0</c>
                    <uv_set_index>0</uv_set_index>
                    <exponent>2.2</exponent>
                    <tex_coord_generation>
                      <uv>
                        <matrix>1 0 0 1</matrix>
                        <translation>0 0</translation>
                      </uv>
                    </tex_coord_generation>
                    <smooth>false</smooth>
                  </texture>
                  <texture>
                    <path>../italy_bolsena_flag_flowers_stairs_01.jpg</path>
                    <a>0</a>
                    <b>1</b>
                    <c>0</c>
                    <uv_set_index>0</uv_set_index>
                    <exponent>2.2</exponent>
                    <tex_coord_generation>
                      <uv>
                        <matrix>1 0 0 1</matrix>
                        <translation>0 0</translation>
                      </uv>
                    </tex_coord_generation>
                    <smooth>false</smooth>
                  </texture>
                  
                    <shader>
                        <![CDATA[  
            
            # Rotate the vector based on a unit random 'r'.
            def rotate(real r, vec2 st) vec2:
              let 
                s = x(st)
                t = y(st)  
              in
                if(r < 0.5,
                  if(r < 0.25,
                      vec2(s, t),
                      vec2(t, -s)
                  ),
                  if(r < 0.75,
                    vec2(-s, -t),
                    vec2(-t, s)
                  )
                )
                
            # Mirror the vector along the x-axis based on a unit random 'r'.
            def mirrorX(real r, vec2 st) vec2:
              if(r < 0.5,
                vec2(-x(st), y(st)),
                vec2(x(st), y(st))
              )
              
            # Mirror the vector along the y-axis based on a unit random 'r'.
            def mirrorY(real r, vec2 st) vec2:
              if(r < 0.5,
                vec2(x(st), -y(st)),
                vec2(x(st), y(st))
              )
 
            def eval(vec3 pos) vec3 :
              let
                # Get UV coords
                uv = getTexCoords(0) * 50.0
                
                # Do random rotation
                st = rotate(gridNoise(uv), uv)
                
                # Do random mirroring.  Note that we use some large integer offsets here to decorrelate our random noise values.
                st_1 = mirrorX(gridNoise(vec2(x(uv) + 43378.0, y(uv) + 567.0  )), st)  
                st_2 = mirrorY(gridNoise(vec2(x(uv) + 6787.0 , y(uv) + 14525.0)), st_1)
                 
                # Pick a random texture index
                NUM_TEXTURES = 1
                tex_index = floorToInt(gridNoise(vec2(x(uv) + 45655.0, y(uv) + 3257.0)) * real(NUM_TEXTURES))
              in
                sample2DTextureVec3(tex_index, st_2)
            ]]>
</shader>
                </shader>
            </albedo>
            <random_triangle_colours>false</random_triangle_colours>
            <layer>0</layer>
        </diffuse>
    </material>
</scenedata>
