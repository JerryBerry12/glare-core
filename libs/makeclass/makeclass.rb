


def makeHeader(f, classname)
	f.puts(<<EOS
//
// Generated by makeclass.rb on #{Time.now.to_s}.
// Copyright Nicholas Chapman.
//
#pragma once


class #{classname}
{
public:
	#{classname}();
	~#{classname}();
	
private:
};


EOS
	)
end


def makeCPPFile(f, classname)
	f.puts(<<EOS
//
// Generated by makeclass.rb on #{Time.now.to_s}.
// Copyright Nicholas Chapman.
//
#include "#{classname}.h"


#{classname}::#{classname}()
{}


#{classname}::~#{classname}()
{}


EOS
	)
end


dir = $*[0]
classname = $*[1]

header_path = dir + "/" + classname + ".h"
raise "Error: Header '#{header_path}' already exists." if File.exists?(header_path)	

header = File.open(header_path, "w")
makeHeader(header, classname)
header.close



cpp_path = dir + "/" + classname + ".cpp"
raise "Error: Cpp file '#{cpp_path}' already exists." if File.exists?(cpp_path)	
	
cpp = File.open(cpp_path, "w")
makeCPPFile(cpp, classname)
cpp.close




